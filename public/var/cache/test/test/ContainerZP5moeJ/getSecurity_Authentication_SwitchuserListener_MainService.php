<?php

namespace ContainerZP5moeJ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authentication_SwitchuserListener_MainService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'security.authentication.switchuser_listener.main' shared service.
     *
     * @return \Symfony\Component\Security\Http\Firewall\SwitchUserListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 6).'/vendor/symfony/security-http/Firewall/SwitchUserListener.php';
        include_once \dirname(__DIR__, 6).'/vendor/symfony/security-core/User/UserCheckerInterface.php';
        include_once \dirname(__DIR__, 6).'/vendor/symfony/security-core/User/InMemoryUserChecker.php';

        $a = ($container->privates['AppBundle\\Security\\UserProvider'] ?? $container->load('getUserProviderService'));

        if (isset($container->privates['security.authentication.switchuser_listener.main'])) {
            return $container->privates['security.authentication.switchuser_listener.main'];
        }
        $b = ($container->privates['debug.security.access.decision_manager'] ?? $container->getDebug_Security_Access_DecisionManagerService());

        if (isset($container->privates['security.authentication.switchuser_listener.main'])) {
            return $container->privates['security.authentication.switchuser_listener.main'];
        }
        $c = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->privates['security.authentication.switchuser_listener.main'])) {
            return $container->privates['security.authentication.switchuser_listener.main'];
        }

        return $container->privates['security.authentication.switchuser_listener.main'] = new \Symfony\Component\Security\Http\Firewall\SwitchUserListener(($container->privates['security.token_storage'] ?? $container->getSecurity_TokenStorageService()), $a, ($container->services['hwi_oauth.user_checker'] ??= new \Symfony\Component\Security\Core\User\InMemoryUserChecker()), 'main', $b, ($container->privates['monolog.logger.security'] ?? $container->getMonolog_Logger_SecurityService()), '_switch_user', 'CAN_SWITCH_USER', $c, false, ($container->services['router'] ?? $container->getRouterService()), NULL);
    }
}
