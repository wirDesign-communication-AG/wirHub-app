<?php

namespace ContainerZP5moeJ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFileTransferServiceService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'AppBundle\Services\myHub\FileTransferService' shared autowired service.
     *
     * @return \AppBundle\Services\myHub\FileTransferService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 6).'/vendor/wirdesign-communication-ag/wirhub/Services/myHub/FileTransferService.php';

        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? $container->getDoctrine_Orm_DefaultEntityManagerService());

        if (isset($container->privates['AppBundle\\Services\\myHub\\FileTransferService'])) {
            return $container->privates['AppBundle\\Services\\myHub\\FileTransferService'];
        }
        $b = ($container->privates['form.factory'] ?? $container->getForm_FactoryService());

        if (isset($container->privates['AppBundle\\Services\\myHub\\FileTransferService'])) {
            return $container->privates['AppBundle\\Services\\myHub\\FileTransferService'];
        }
        $c = ($container->privates['AppBundle\\Services\\UserService'] ?? $container->getUserServiceService());

        if (isset($container->privates['AppBundle\\Services\\myHub\\FileTransferService'])) {
            return $container->privates['AppBundle\\Services\\myHub\\FileTransferService'];
        }

        return $container->privates['AppBundle\\Services\\myHub\\FileTransferService'] = new \AppBundle\Services\myHub\FileTransferService(\dirname(__DIR__, 6), ($container->privates['AppBundle\\Repository\\myHub\\FileTransferRepository'] ?? $container->getFileTransferRepositoryService()), ($container->privates['AppBundle\\Repository\\myHub\\FileTransferFileRepository'] ?? $container->load('getFileTransferFileRepositoryService')), $a, $b, ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), ($container->privates['AppBundle\\Router\\PersistentQueryRouter'] ?? $container->getPersistentQueryRouterService()), $c);
    }
}
