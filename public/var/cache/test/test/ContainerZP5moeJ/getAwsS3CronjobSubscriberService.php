<?php

namespace ContainerZP5moeJ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAwsS3CronjobSubscriberService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'AppBundle\EventSubscriber\Cronjob\AwsS3CronjobSubscriber' shared autowired service.
     *
     * @return \AppBundle\EventSubscriber\Cronjob\AwsS3CronjobSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 6).'/vendor/wirdesign-communication-ag/wirhub/Component/Interfaces/IsCronjobEventSubscriberInterface.php';
        include_once \dirname(__DIR__, 6).'/vendor/wirdesign-communication-ag/wirhub/EventSubscriber/Cronjob/AwsS3CronjobSubscriber.php';

        $a = ($container->privates['AppBundle\\Services\\System\\CronjobService'] ?? $container->getCronjobServiceService());

        if (isset($container->privates['AppBundle\\EventSubscriber\\Cronjob\\AwsS3CronjobSubscriber'])) {
            return $container->privates['AppBundle\\EventSubscriber\\Cronjob\\AwsS3CronjobSubscriber'];
        }
        $b = ($container->services['doctrine.orm.default_entity_manager'] ?? $container->getDoctrine_Orm_DefaultEntityManagerService());

        if (isset($container->privates['AppBundle\\EventSubscriber\\Cronjob\\AwsS3CronjobSubscriber'])) {
            return $container->privates['AppBundle\\EventSubscriber\\Cronjob\\AwsS3CronjobSubscriber'];
        }
        $c = ($container->privates['AppBundle\\Services\\FileService'] ?? $container->getFileServiceService());

        if (isset($container->privates['AppBundle\\EventSubscriber\\Cronjob\\AwsS3CronjobSubscriber'])) {
            return $container->privates['AppBundle\\EventSubscriber\\Cronjob\\AwsS3CronjobSubscriber'];
        }
        $d = ($container->privates['AppBundle\\Repository\\FileRepository'] ?? $container->getFileRepositoryService());

        if (isset($container->privates['AppBundle\\EventSubscriber\\Cronjob\\AwsS3CronjobSubscriber'])) {
            return $container->privates['AppBundle\\EventSubscriber\\Cronjob\\AwsS3CronjobSubscriber'];
        }

        return $container->privates['AppBundle\\EventSubscriber\\Cronjob\\AwsS3CronjobSubscriber'] = new \AppBundle\EventSubscriber\Cronjob\AwsS3CronjobSubscriber(\dirname(__DIR__, 6), ($container->privates['AppBundle\\Services\\Vendor\\AmazonWebServicesService'] ??= new \AppBundle\Services\Vendor\AmazonWebServicesService()), $a, $b, $c, $d);
    }
}
