<?php

namespace ContainerZP5moeJ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCombinedCleanUpCronjobEventSubscriberService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'AppBundle\EventSubscriber\Cronjob\CombinedCleanUpCronjobEventSubscriber' shared autowired service.
     *
     * @return \AppBundle\EventSubscriber\Cronjob\CombinedCleanUpCronjobEventSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 6).'/vendor/wirdesign-communication-ag/wirhub/Component/Interfaces/IsCronjobEventSubscriberInterface.php';
        include_once \dirname(__DIR__, 6).'/vendor/wirdesign-communication-ag/wirhub/EventSubscriber/Cronjob/CombinedCleanUpCronjobEventSubscriber.php';

        $a = ($container->privates['AppBundle\\Services\\System\\CronjobService'] ?? $container->getCronjobServiceService());

        if (isset($container->privates['AppBundle\\EventSubscriber\\Cronjob\\CombinedCleanUpCronjobEventSubscriber'])) {
            return $container->privates['AppBundle\\EventSubscriber\\Cronjob\\CombinedCleanUpCronjobEventSubscriber'];
        }
        $b = ($container->services['doctrine.orm.default_entity_manager'] ?? $container->getDoctrine_Orm_DefaultEntityManagerService());

        if (isset($container->privates['AppBundle\\EventSubscriber\\Cronjob\\CombinedCleanUpCronjobEventSubscriber'])) {
            return $container->privates['AppBundle\\EventSubscriber\\Cronjob\\CombinedCleanUpCronjobEventSubscriber'];
        }
        $c = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->privates['AppBundle\\EventSubscriber\\Cronjob\\CombinedCleanUpCronjobEventSubscriber'])) {
            return $container->privates['AppBundle\\EventSubscriber\\Cronjob\\CombinedCleanUpCronjobEventSubscriber'];
        }

        return $container->privates['AppBundle\\EventSubscriber\\Cronjob\\CombinedCleanUpCronjobEventSubscriber'] = new \AppBundle\EventSubscriber\Cronjob\CombinedCleanUpCronjobEventSubscriber($a, $b, $c);
    }
}
